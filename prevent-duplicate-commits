#!/usr/bin/env python

import subprocess
import sys
import fileinput

MSG = """
    ERROR!

    There are duplicate commits in your commit history,
    which should not be pushed to the Bioconductor git 
    server. Please make sure that this is resolved, 
    otherwise, the pre-receive hook will not let you update,
    your repository.

    For more information, or help resolving this issue,
    contact <bioc-devel@r-project.org>. Provide, the error,
    the package name and any other details we might need.

    """

def check_commit_pairs(commit_list):
    print("checking new commit_list")
    commit_list = commit_list.split("\n")
    commit_list = [item for item in commit_list if len(item)>0]
    # For each of the first 10 pairs, check diff
    body2 = None
    for i in xrange(len(commit_list) -1):
        # If first commit is because of a unhealthy merge,
        # Line will have 3 commits.
        print i
        
        first = commit_list[i]
        second = commit_list[i+1]
        if (i == 0 or body2 == None):
            body1 = subprocess.check_output(["git", "show", "--format=%b", first]).strip()
        else:
            body1 = body2

        if not body1:
            continue
        body2 = subprocess.check_output(["git", "show", "--format=%b", second]).strip()
        if not body2:
            continue
        diff = subprocess.check_output(["git", "diff", first, second])

        if not diff:
            print(MSG)
            print("First commit  :  %s" % first)
            print("Second commit :  %s" % second)
            sys.exit(1)
    return

if False:
    newrev = subprocess.check_output([
        "git", "log", "-1", "--format=%H"
    ]).strip()
    
    commit_list = subprocess.check_output([
        "git", "rev-list", "HEAD", "-n", "10"
    ])
    check_commit_pairs(commit_list)
    sys.exit(0)

for line in fileinput.input():
    std_input = line.split(" ")
    oldrev, newrev, refname  = std_input[0], std_input[1], std_input[2]
    print "old %s, new %s, ref %s" % (oldrev, newrev, refname)
    commit_list = subprocess.check_output([
        "git", "rev-list", newrev, "-n", "10"
    ])
    check_commit_pairs(commit_list)
