#!/usr/bin/env python

#
# Pre-receive hook that will block any commits which have a history of duplicate commits 
#

import sys
import subprocess
import fileinput

MSG = """
    ERROR!

    There are duplicate commits in your commit history,
    which should not be pushed to the Bioconductor git 
    server. Please make sure that this is resolved, 
    otherwise, the pre-receive hook will not let you update,
    your repository.

    For more information, or help resolving this issue,
    contact <bioc-devel@r-project.org>. Provide, the error,
    the package name and any other details we might need.

    """

# Read in each ref that the user is trying to update
for line in fileinput.input():
    print "pre-recive: Trying to push ref %s" % line
    std_input = line.split(" ")
    oldrev, newrev, refname  = std_input[0], std_input[1], std_input[2]
    print "old %s, new %s, refname %s" % (oldrev, newrev, refname)
    # Get pairs of commits from the revision-list (rev-list)
    # from the parent of the new-rev
    check_pairs = subprocess.check_output(["git", 
                                           "rev-list",
                                           "--parents",
                                           "-n", "10", newrev]).split("\n")
    print "check_pairs"
    print check_pairs
    # For each of the first 10 pairs, check diff
    for pair in check_pairs:
        # If first commit is because of a unhealthy merge,
        # 48a200adb06c5a5be35292f9be842d0c14aabe69 63ba9cfcb5445730fa7d2303c0817dde02c69aee 741b29fe7a801e67945a53b65ec8db67a9e69d82
        # Line will have 3 commits.
        splitter = pair.split()
        print "Splitter: %s" % splitter
        if len(splitter) == 3:
            first, second = splitter[1:]
        else:
            first, second = splitter
        out = subprocess.check_output(["git", "diff", first, second])
        if not out:
            print(MSG)
            print("First commit  :  %s" % first)
            print("Second commit :  %s" % second)
            sys.exit(1)

